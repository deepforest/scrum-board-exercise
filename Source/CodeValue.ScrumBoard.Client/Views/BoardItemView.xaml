<UserControl x:Class="CodeValue.ScrumBoard.Client.Views.BoardItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cal="http://www.caliburnproject.org"
             mc:Ignorable="d" Height="177" Width="279.975">

    <UserControl.Resources>
        <Style TargetType="Menu" x:Key="GelButton" >
            <Setter Property="Margin" Value="1,2,1,2"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
    </UserControl.Resources>

    <Grid Background="DodgerBlue" Margin="5,5,38,19">
        <Grid.RowDefinitions>
            <RowDefinition Height="0.30*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="0.2*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.6*"/>
            <ColumnDefinition Width="0.2*"/>
            <ColumnDefinition Width="0.2*"/>
        </Grid.ColumnDefinitions>
        <TextBox x:Name="BoardName" Text="{Binding Name, Mode=OneWay}" Grid.Row="0" Grid.Column="0" 
                                 Grid.ColumnSpan="2" FontSize="15">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Setter Property="Background" Value="DodgerBlue"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{ Binding IsEditable }" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{ Binding IsEditable }" Value="False">
                            <Setter Property="IsReadOnly" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <TextBox x:Name="BoardDescription" Text="{Binding Description, Mode=OneWay}" Grid.Row="1" Grid.Column="0" 
                                 Grid.ColumnSpan="2" FontSize="10">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Setter Property="Background" Value="DodgerBlue"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{ Binding IsEditable }" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{ Binding IsEditable }" Value="False">
                            <Setter Property="IsReadOnly" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <Button x:Name="BoardXButton" Content="X"  Grid.Row="0" Grid.Column="2" 
                                 FontSize="15" cal:Message.Attach="[Event Click] = [Action DiscardChanges()]">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{ Binding IsEditable }" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{ Binding IsEditable }" Value="False">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="BoardSaveButton" Content="Save"  Grid.Row="2" Grid.Column="2" 
                                FontSize="15" cal:Message.Attach="[Event Click] = [Action SaveBoardDetailsChangesAsync(BoardName.Text,BoardDescription.Text)]">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{ Binding IsEditable }" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{ Binding IsEditable }" Value="False">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Menu Grid.Row="0" Grid.Column="2" RenderTransformOrigin="0.5,0.5" Margin="7,-7,7,7">
            <MenuItem Header="..." FontSize="19">
                <MenuItem Header="Open" cal:Message.Attach="[Event Click] = [Action  OpenBoard()]"/>
                <MenuItem Header="Edit" cal:Message.Attach="[Event Click] = [Action EditBoard()]"/>
                <MenuItem Header="Delete" cal:Message.Attach="[Event Click] = [Action RemoveBoard()]"/>
            </MenuItem>
            <Menu.Style>
                <Style TargetType="{x:Type Menu}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{ Binding IsEditable }" Value="True">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <DataTrigger Binding="{ Binding IsEditable }" Value="False">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Menu.Style>
        </Menu>
    </Grid>
</UserControl>
